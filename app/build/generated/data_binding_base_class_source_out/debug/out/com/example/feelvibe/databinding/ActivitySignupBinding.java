// Generated by view binder compiler. Do not edit!
package com.example.feelvibe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.feelvibe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignupBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnAlreadyHaveAnAccount;

  @NonNull
  public final Button btnRegister;

  @NonNull
  public final EditText txtConfirmPassword;

  @NonNull
  public final EditText txtEmailReg;

  @NonNull
  public final EditText txtPasswordReg;

  private ActivitySignupBinding(@NonNull RelativeLayout rootView,
      @NonNull Button btnAlreadyHaveAnAccount, @NonNull Button btnRegister,
      @NonNull EditText txtConfirmPassword, @NonNull EditText txtEmailReg,
      @NonNull EditText txtPasswordReg) {
    this.rootView = rootView;
    this.btnAlreadyHaveAnAccount = btnAlreadyHaveAnAccount;
    this.btnRegister = btnRegister;
    this.txtConfirmPassword = txtConfirmPassword;
    this.txtEmailReg = txtEmailReg;
    this.txtPasswordReg = txtPasswordReg;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAlreadyHaveAnAccount;
      Button btnAlreadyHaveAnAccount = ViewBindings.findChildViewById(rootView, id);
      if (btnAlreadyHaveAnAccount == null) {
        break missingId;
      }

      id = R.id.btnRegister;
      Button btnRegister = ViewBindings.findChildViewById(rootView, id);
      if (btnRegister == null) {
        break missingId;
      }

      id = R.id.txtConfirmPassword;
      EditText txtConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (txtConfirmPassword == null) {
        break missingId;
      }

      id = R.id.txtEmailReg;
      EditText txtEmailReg = ViewBindings.findChildViewById(rootView, id);
      if (txtEmailReg == null) {
        break missingId;
      }

      id = R.id.txtPasswordReg;
      EditText txtPasswordReg = ViewBindings.findChildViewById(rootView, id);
      if (txtPasswordReg == null) {
        break missingId;
      }

      return new ActivitySignupBinding((RelativeLayout) rootView, btnAlreadyHaveAnAccount,
          btnRegister, txtConfirmPassword, txtEmailReg, txtPasswordReg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
